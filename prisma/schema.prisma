// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  CASHIER
}

enum Category {
  FOOD
  DRINK
  SNACK
}

enum Payment {
  CASH
  QRIS
}

enum Status {
  NEW
  PAID
  DONE
}

model menu {
  id          Int         @id @default(autoincrement())
  uuid        String      @default("")
  name        String      @default("")
  price       Int         @default(0)
  category    Category    @default(FOOD)
  picture     String      @default("")
  description String      @default("") @db.Text
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderLists  OrderLists[]
}

model user {
  id             Int      @id @default(autoincrement())
  uuid           String   @default("")
  name           String   @default("")
  email          String   @unique @default("")
  password       String   @default("")
  profil_picture String   @default("")
  role           Role     @default(CASHIER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  orderDetail    Order[]
}

model Order {
  id             Int         @id @default(autoincrement())
  uuid           String      @unique @default("")
  customer       String      @default("")
  table_number   String      @default("")
  total_price    Int         @default(0)
  payment_method Payment     @default(CASH)
  status         Status      @default(NEW)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  orderLists     OrderLists[]
  User           user?       @relation(fields: [userid], references: [id])
  userid         Int?
}

model OrderLists {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default("")
  quantity  Int      @default(0)
  note      String   @default("") @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Menu      menu?    @relation(fields: [MenuId], references: [id])
  MenuId    Int?
  Order     Order?   @relation(fields: [OrderId], references: [id])
  OrderId   Int?
}
